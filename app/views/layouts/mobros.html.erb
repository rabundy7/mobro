<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
  <title>MoBro (Model Browser)</title>
	<%= javascript_include_tag :defaults %>
	<style>
		.model_container{
			  min-width:300px;
			  /* width:300px; */
			  /* overflow-x:auto; */
			  border:1px;
			  border-style:solid;
			  background-color:#EEEEEE;
			}
			
			.model_heading{
			  background-color:#024C68;
			  color:#FFFFFF;
			  border-bottom:1px;
			  border-top:0px;
			  border-left:0px;
			  border-right:0px;
			  border-style:solid;
			  font-weight:bolder;
			  font-size:larger;
			}
			
			.assoc_container{
			  border:1px;
			  border-style:solid;
			  height:200px;
			  background-color:#B9E1F0;
			  overflow-y:scroll;
			}
			
			.assoc_heading{
			  background-color:#024C68;
			  color:#FFFFFF;
			  border-bottom:1px;
			  border-top:0px;
			  border-left:0px;
			  border-right:0px;
			  border-style:solid;
			  font-weight:bolder;
			  font-size:larger;
			}
			
			.assoc_model_container{
			  float:left;
			  padding:10px;
			}
			
			.mobro_label{
			  color:#013B51;
			}
			
			.mobro_heading{
			  color:#FF8500;
			  font-size:x-large;
			}
			
			#form_container{
			  float:left;
			  /* height:100px; */
			  /* width:200px; */
			  background-color:#FFB86B;
			  color:#814300;
			  margin-left:100px;
				padding:0 0 0 0;
			  /* border:double; */
			  /* border-color:#A5723A; */
			}
			
			.content_area{
			  float:left;
			}
			
			.new_item{
				background-color:green;
			}
			
			.modified_item{
				background-color:yellow;
			}
			
			.deleted_item{
				background-color:red;
			}
	</style>
	<script>
		function flag_as_deleted(elem_row, column_name){
			var dcv_raw = $('deleted_columns').value; 
			var dcv = dcv_raw == '' ? new Array() : dcv_raw.split(/,/);
			var deleting = true;
			for (var i = 0; i < dcv.length; i++){
				if (dcv[i] == column_name){
					elem_row.setAttribute('class', '');
					dcv.splice(i, 1);
					deleting = false;
					break;
				}
			}
			if (deleting == true) {
		  	elem_row.setAttribute('class', 'deleted_item');
				dcv.push(column_name);
		  }
			$('deleted_columns').value = dcv.toString();
		}
		
		function flag_as_modified(elem, idx){
			if (elem.getAttribute('orig') != elem.value) {
	  	  elem.setAttribute('class', 'modified_item');
	    } else {
	  	  elem.setAttribute('class', '');
		  }
		}
		
		function create_new_row(event){
			var elem = event.element();
			var row_parent = elem.ancestors()[2];
			var last_row = row_parent.childElements().last();
			var last_row_input = last_row.select('input').first();
			if (last_row_input.value != ''){
				var row_count = last_row_input.id.substring(0, last_row_input.id.indexOf('_'));
				var new_input_id = (parseInt(row_count) + 1) + last_row_input.id.substring(last_row_input.id.indexOf('_'));
				var new_row = last_row.cloneNode(true);
				var new_row_input = new_row.select('input').first();
				new_row_input.value = '';
				new_row_input.name = new_input_id;
				new_row_input.id = new_input_id;
				var new_row_select = new_row.select('select').first();
				new_row_select.name = new_input_id + '_type';
				new_row_select.id = new_input_id + '_type';
				row_parent.appendChild(new_row);
			} 
		}
	</script>
</head>
<body>
<span class="mobro_heading">MoBro</span><br />
<label class="mobro_label">Select a Model to Browse:</label>
<%= select_tag 'selected_model', options_from_collection_for_select(@models, :name, :name, @model.name), :onchange => "window.location='/mobros?selected_model='+this.value" %><br />
<%= yield %>
</body>
</html>
